# テトロミノ形状の定義
TETROMINOS = [
    {
        "shape": [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],
        "color": 0,
    },  # I - シアン（水色）- 特殊な回転パターン
    {"shape": [[1, 1], [1, 1]], "color": 1},  # O - イエロー（黄色）- 回転しない
    {
        "shape": [[0, 1, 0], [1, 1, 1], [0, 0, 0]],
        "color": 2,
    },  # T - パープル（紫色）- 中央を回転中心とする
    {
        "shape": [[1, 0, 0], [1, 1, 1], [0, 0, 0]],
        "color": 3,
    },  # J - ブルー（青色）- 中央を回転中心とする
    {
        "shape": [[0, 0, 1], [1, 1, 1], [0, 0, 0]],
        "color": 4,
    },  # L - オレンジ（橙色）- 中央を回転中心とする
    {
        "shape": [[0, 1, 1], [1, 1, 0], [0, 0, 0]],
        "color": 5,
    },  # S - グリーン（緑色）- 中央を回転中心とする
    {
        "shape": [[1, 1, 0], [0, 1, 1], [0, 0, 0]],
        "color": 6,
    },  # Z - レッド（赤色）- 中央を回転中心とする
]

# SRS (Super Rotation System) のキック定義
# 通常のミノ（JLSTZ）用キックテーブル
KICKS = {
    # 0->1 (A->B): 0度から90度（右回転）
    "01": [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
    # 1->2 (B->C): 90度から180度（右回転）
    "12": [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
    # 2->3 (C->D): 180度から270度（右回転）
    "23": [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
    # 3->0 (D->A): 270度から0度（右回転）
    "30": [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
    # 1->0 (B->A): 90度から0度（左回転）
    "10": [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
    # 2->1 (C->B): 180度から90度（左回転）
    "21": [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
    # 3->2 (D->C): 270度から180度（左回転）
    "32": [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
    # 0->3 (A->D): 0度から270度（左回転）
    "03": [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
}

# I型の特殊キックテーブル
I_KICKS = {
    # 0->1 (A->B): 0度から90度（右回転）
    "01": [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
    # 1->2 (B->C): 90度から180度（右回転）
    "12": [(0, 0), (-1, 0), (2, 0), (-1, 2), (2, -1)],
    # 2->3 (C->D): 180度から270度（右回転）
    "23": [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
    # 3->0 (D->A): 270度から0度（右回転）
    "30": [(0, 0), (1, 0), (-2, 0), (1, -2), (-2, 1)],
    # 1->0 (B->A): 90度から0度（左回転）
    "10": [(0, 0), (1, 0), (-2, 0), (1, -2), (-2, 1)],
    # 2->1 (C->B): 180度から90度（左回転）
    "21": [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
    # 3->2 (D->C): 270度から180度（左回転）
    "32": [(0, 0), (-1, 0), (2, 0), (-1, 2), (2, -1)],
    # 0->3 (A->D): 0度から270度（左回転）
    "03": [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
}


# 行列回転関数
def rotate_matrix(matrix):
    """行列を時計回りに90度回転する"""
    rows = len(matrix)
    cols = len(matrix[0]) if rows > 0 else 0
    result = [[0 for _ in range(rows)] for _ in range(cols)]

    for i in range(rows):
        for j in range(cols):
            result[j][rows - 1 - i] = matrix[i][j]

    return result


def rotate_matrix_ccw(matrix):
    """行列を反時計回りに90度回転する"""
    rows = len(matrix)
    cols = len(matrix[0]) if rows > 0 else 0
    result = [[0 for _ in range(rows)] for _ in range(cols)]

    for i in range(rows):
        for j in range(cols):
            result[cols - 1 - j][i] = matrix[i][j]

    return result
